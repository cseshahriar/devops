FROM node:alpine # install node image where apline distribution
COPY . /app  # make app dir and copy project
WORKDIR /app  # save app.js in work directory
CMD node app.js  # run app.js

# build docker build 
docker build -t docket_test .  # -t means tag . means current directory

# see image
docker images or docker image ls

# run
docker run image_name

# docker login
docker login

# upload
docker tag docket_test:2bc154b61223 shosen/docket_test:1.1.0
docker tag 2bc154b61223 shosen/docket_test

# docker push
docker push shosen/docker_test

# docker pull
docker pull shosen/docker_test:latest

# run from docker image
docker run shosen/docker_test


# ====================== django app dockerize =================================
django application     -> docker images        -> docker container
------------------------------------------------------------------
django app             -> dockerfile           -> os(linux)
                                               -> database
                                               -> django app
                                               -> packages
                                               
                                               -> local machine
                                               -> AWS
                                               -> Digital Ocean
                                               -> Heroku

# make a Dockerfile
FROM python:3.8-slim-buster

WORKDIR /app

COPY requirements.txt requirements.txt
RUN pip3 install -r requirements.txt
COPY . .
CMD ["python3", "manage.py", "runserver", "127.0.0.1:8000"]

# docker make image
docker build --tag python-django .
docker run --publish 9000:9000 python-django

# images
docker images


# stop images
docker kill $(docker ps -q)

# remove all docker container
docker rm $(docker ps -a -q)


# ========================== start a django project with docker ===============
docker-compose.yml

version: '3.8'
services:
  app:
    build: .
    volumes:
      - .:/django
    ports:
      - 8000:8000
    image: app:django
    container_name: django_container
    command: python manage.py runserver 127.0.0.0:8000

# build
docker-compose build

# docker images
REPOSITORY           TAG               IMAGE ID       CREATED        SIZE
<none>               <none>            40b760dd038d   44 hours ago   159MB
app                  django            dcdcb7a6e287   44 hours ago   159MB

# run
docker-compose run --rm app django-admin startproject core .

# docker-compose up

# docker container ls

# List containers
docker container ls	

# Pause all processes within one or more containers
docker container pause	

# List port mappings or a specific mapping for the container
docker container port	

# Remove all stopped containers
docker container prune	